apiVersion: v1

kind: ConfigMap
metadata:
  name: telegraf-config
data:
  telegraf.conf: |+
    [global_tags]
    user="${INFLUXDB_USER}"

    [agent]
      interval = "10s"
      round_interval = true

      metric_batch_size = 1000

      metric_buffer_limit = 10000

      collection_jitter = "0s"

      flush_interval = "10s"

      flush_jitter = "0s"

      precision = ""

      debug = false

      quiet = false

      logfile = ""

      hostname = ""

      omit_hostname = true


    ###############################################################################
    #                            OUTPUT PLUGINS                                   #
    ###############################################################################

    [[outputs.influxdb]]
      ## The full HTTP or UDP URL for your InfluxDB instance.
      ##
      ## Multiple URLs can be specified for a single cluster, only ONE of the
      ## urls will be written to each interval.
      # urls = ["unix:///var/run/influxdb.sock"]
      # urls = ["udp://127.0.0.1:8089"]
      # urls = ["http://127.0.0.1:8086"]
      urls = ["$INFLUXDB_URL"]

      ## The target database for metrics; will be created as needed.
      database = "$INFLUXDB_DB"

      ## If true, no CREATE DATABASE queries will be sent.  Set to true when using
      ## Telegraf with a user without permissions to create databases or when the
      ## database already exists.
      # skip_database_creation = false

      ## Name of existing retention policy to write to.  Empty string writes to
      ## the default retention policy.  Only takes effect when using HTTP.
      # retention_policy = ""

      ## Write consistency (clusters only), can be: "any", "one", "quorum", "all".
      ## Only takes effect when using HTTP.
      # write_consistency = "any"

      ## Timeout for HTTP messages.
      # timeout = "5s"

      ## HTTP Basic Auth
      username = "${INFLUXDB_USER}"
      password = "${INFLUXDB_USER_PASSWORD}"

      ## HTTP User-Agent
      # user_agent = "telegraf"

      ## UDP payload size is the maximum packet size to send.
      # udp_payload = 512

      ## Optional TLS Config for use on HTTP connections.
      # tls_ca = "/etc/telegraf/ca.pem"
      # tls_cert = "/etc/telegraf/cert.pem"
      # tls_key = "/etc/telegraf/key.pem"
      ## Use TLS but skip chain & host verification
      # insecure_skip_verify = false

      ## HTTP Proxy override, if unset values the standard proxy environment
      ## variables are consulted to determine which proxy, if any, should be used.
      # http_proxy = "http://corporate.proxy:3128"

      ## Additional HTTP headers
      # http_headers = {"X-Special-Header" = "Special-Value"}

      ## HTTP Content-Encoding for write request body, can be set to "gzip" to
      ## compress body or "identity" to apply no encoding.
      # content_encoding = "identity"

      ## When true, Telegraf will output unsigned integers as unsigned values,
      ## i.e.: "42u".  You will need a version of InfluxDB supporting unsigned
      ## integer values.  Enabling this option will result in field type errors if
      ## existing data has been written.
      # influx_uint_support = false

    ###############################################################################
    #                            INPUT PLUGINS                                    #
    ###############################################################################

    # Read metrics about cpu usage
    [[inputs.cpu]]
      ## Whether to report per-cpu stats or not
      percpu = true
      ## Whether to report total system cpu stats or not
      totalcpu = true
      ## If true, collect raw CPU time metrics.
      collect_cpu_time = false
      ## If true, compute and report the sum of all non-idle CPU states.
      report_active = false

    # Read metrics about disk usage by mount point
    [[inputs.disk]]
      ## By default stats will be gathered for all mount points.
      ## Set mount_points will restrict the stats to only the specified mount points.
      # mount_points = ["/"]

      ## Ignore mount points by filesystem type.
      ignore_fs = ["tmpfs", "devtmpfs", "devfs", "overlay", "aufs", "squashfs"]

      # Read metrics about docker containers
    [[inputs.docker]]
      ## Docker Endpoint
      ##   To use TCP, set endpoint = "tcp://[ip]:[port]"
      ##   To use environment variables (ie, docker-machine), set endpoint = "ENV"
      endpoint = "unix:///var/run/docker.sock"

      ## Set the source tag for the metrics to the container ID hostname, eg first 12 chars
      source_tag = false

      ## Containers to include and exclude. Collect all if empty. Globs accepted.
      container_name_include = []
      container_name_exclude = []

      ## Container states to include and exclude. Globs accepted.
      ## When empty only containers in the "running" state will be captured.
      ## example: container_state_include = ["created", "restarting", "running", "removing", "paused", "exited", "dead"]
      ## example: container_state_exclude = ["created", "restarting", "running", "removing", "paused", "exited", "dead"]
      # container_state_include = []
      # container_state_exclude = []

      ## Timeout for docker list, info, and stats commands
      timeout = "5s"

      ## Whether to report for each container per-device blkio (8:0, 8:1...),
      ## network (eth0, eth1, ...) and cpu (cpu0, cpu1, ...) stats or not.
      ## Usage of this setting is discouraged since it will be deprecated in favor of 'perdevice_include'.
      ## Default value is 'true' for backwards compatibility, please set it to 'false' so that 'perdevice_include' setting 
      ## is honored.
      perdevice = true

      ## Whether to report for each container total blkio and network stats or not.
      ## Usage of this setting is discouraged since it will be deprecated in favor of 'total_include'.
      ## Default value is 'false' for backwards compatibility, please set it to 'true' so that 'total_include' setting 
      ## is honored.
      total = false

      ## docker labels to include and exclude as tags.  Globs accepted.
      ## Note that an empty array for both will include all labels as tags
      docker_label_include = []
      docker_label_exclude = []

      ## Which environment variables should we use as a tag
      tag_env = ["JAVA_HOME", "HEAP_SIZE"]

      ## Optional TLS Config
      # tls_ca = "/etc/telegraf/ca.pem"
      # tls_cert = "/etc/telegraf/cert.pem"
      # tls_key = "/etc/telegraf/key.pem"
      ## Use TLS but skip chain & host verification
      # insecure_skip_verify = false